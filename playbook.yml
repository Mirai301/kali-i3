- hosts: all
  become_user: root
  become: true
  tasks:
    - name: Check remote user
      debug:
        msg: "The remote user is {{ ansible_user }}"

    # vagrant経由でplaybookを実行した場合
    - name: Set my dotfiles to vagrant user
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - { src: "/vagrant/dotfiles/git/.gitconfig", dest: "~/.gitconfig" }
        - { src: "/vagrant/dotfiles/ssh/config", dest: "~/.ssh/config" }
        - { src: "/vagrant/dotfiles/tmux/.tmux.conf", dest: "~/.tmux.conf" }
        - { src: "/vagrant/dotfiles/vim/.vimrc", dest: "~/.vimrc" }
        - { src: "/vagrant/dotfiles/tmux/.ctf_profile.zsh", dest: "~/.ctf_profile.zsh" }
      when: ansible_user == 'vagrant'

    # ホストマシンでplaybookを実行した場合
    # eg: cd ~/Desktop/kali-i3/ && ansible-playbook --connection=local -i localhost, playbook.yaml
    - name: Create .ssh directory
      file:
        path: "~/.ssh"
        state: directory

    - name: Set my dotfiles to kali user
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - { src: "~/Desktop/kali-i3/dotfiles/git/.gitconfig", dest: "~/.gitconfig" }
        - { src: "~/Desktop/kali-i3/dotfiles/ssh/config", dest: "~/.ssh/config" }
        - { src: "~/Desktop/kali-i3/dotfiles/tmux/.tmux.conf", dest: "~/.tmux.conf" }
        - { src: "~/Desktop/kali-i3/dotfiles/vim/.vimrc", dest: "~/.vimrc" }
        - { src: "~/Desktop/kali-i3/dotfiles/tmux/.ctf_profile.zsh", dest: "~/.ctf_profile.zsh" }
      when: ansible_user == 'kali'

    - name: package update
      ansible.builtin.apt:
        update_cache: yes

    - name: Install the missing packages
      become: yes
      become_user: root
      ansible.builtin.apt:
        pkg:
          - kali-desktop-i3
          - i3-dotfiles
          - task-japanese 
          - task-japanese-desktop 
          - locales-all
          - fcitx-mozc
          - ufw
          - openvpn
          - seclists
          - rlwrap
          - autorecon
          - jd-gui
          - flameshot
        state: latest
        update_cache: yes

    - name: Set language and keyboard setting is Japanese
      become: yes
      become_user: root
      shell: sed -i 's/# ja_JP.UTF-8 UTF-8/ja_JP.UTF-8 UTF-8/g' /etc/locale.gen && \
             dpkg-reconfigure --frontend noninteractive locales && \
             update-locale LANG=ja_JP.UTF-8 && \
             ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
             # sed -i 's/XKBLAYOUT="us"/XKBLAYOUT="日本語"/g' /etc/default/keyboard
             # export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0 && \
             # setxkbmap jp

    - name: Set i3-wm config file to root
      become: yes
      become_user: root
      shell: cd /usr/share/ && \
             sed -i "s/\/usr\/bin\/kitty/\/usr\/bin\/qterminal/g" "$PWD"/i3-dotfiles/etc/skel/.config/i3/config.d/keybinds.conf && \
             sed -i "s/kitty/qterminal/g" "$PWD/i3-dotfiles/etc/skel/.config/xfce4/helpers.rc" && \
             rsync -a "$PWD"/i3-dotfiles/etc/skel/ /etc/skel/ && \
             rsync -a "$PWD"/i3-dotfiles/etc/skel/ /root/ && \
             rsync -a "$PWD"/i3-dotfiles/etc/skel/.local/bin

    - name: Set i3-wm config file to vagrant user
      shell: cd /usr/share/ && \
             rsync -a "$PWD"/i3-dotfiles/etc/skel/ "$HOME"/

    - name: Include software installation tasks
      ansible.builtin.include_tasks:
        file: Install_missing_package.yml